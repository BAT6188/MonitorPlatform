<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:local1="clr-namespace:MonitorPlatform.Convert" 
                    
                       xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                     >
    <local1:StringToBrushConverter x:Key="StringToBrushConverter" />
    <local1:StatusToBrushConverter x:Key="StatusToBrushConverter" />
    <Style TargetType="Grid" x:Key="gridbackground">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#0f1a2b" Offset="0.0"/>
                    <GradientStop Color="#11387e" Offset="0.5"/>
                    <GradientStop Color="#003366" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SelectableListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="Disabled">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" />
                                        <DoubleAnimation 
                                            Storyboard.TargetName="InnerGrid" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                            Duration="0:0:0.1"
                                            From="1" To="0.975"/>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="InnerGrid" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                            Duration="0:0:0.1"
                                            From="1" To="0.975" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                                <VisualState x:Name="SelectedDisabled" />
                                <VisualState x:Name="SelectedPointerOver" />
                                <VisualState x:Name="SelectedPressed" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="InnerGrid" RenderTransformOrigin="0.5, 0.5">
                            <ContentControl Opacity="0.5" x:Name="ContentPresenter" Foreground="{TemplateBinding Foreground}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                            </Grid.RenderTransform>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BasicTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Typography.StylisticSet20" Value="True"/>
        <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
        <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
    </Style>

    <Style x:Key="BaselineTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BasicTextStyle}">
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
    </Style>

    <Style x:Key="HeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontSize" Value="42"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="Margin" Value="0,5,10,0"/>
        <Setter Property="FontSize" Value="40" />
        <Setter Property="LineHeight" Value="40" />
    </Style>
    <Style x:Key="SectionHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="Margin" Value="0,0,15,0"/>
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />
    </Style>

    <Style x:Key="SmallSectionHeaderText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="Border" x:Key="SmallSectionHeader">
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="260"/>

        <!--<Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />-->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#021327" Offset="0.0"/>
                    <GradientStop Color="#11387e" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="TitileSection">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#0f1a2b" Offset="0.0"/>
                    <GradientStop Color="#003366" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SectionContentSmallTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="Foreground" Value="#00a0e9"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="SectionHeaderSmallTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="Margin" Value="0,10,5,5"/>
        <Setter Property="FontSize" Value="18" />
    </Style>

    <Style x:Key="CategorySmallTextStyle" TargetType="TextBlock" >
        <!--<Setter Property="Margin" Value="0,10,0,3"/>-->
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="#5aa0ef"></Setter>
        <Setter Property="Margin" Value="0,10,0,0"></Setter>
    </Style>

    <Style TargetType="Border" x:Key="BossPopupContent">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--<Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />-->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#0a78b6" Offset="0.0"/>
                    <GradientStop Color="#003f7e" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BossPopupContentHeader" TargetType="TextBlock" >
        <!--<Setter Property="Margin" Value="0,10,0,3"/>-->
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="White"></Setter>
        <!--<Setter Property="Margin" Value="0,5,0,0"></Setter>-->
    </Style>
    <Style x:Key="BossPopupContentText" TargetType="TextBlock" >
        <!--<Setter Property="Margin" Value="0,10,0,3"/>-->
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="#5aa0ef"></Setter>
        <Setter Property="Margin" Value="0,0,0,5"></Setter>
    </Style>

    <Style TargetType="Border" x:Key="PopupContent">
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--<Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />-->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#0a78b6" Offset="0.0"/>
                    <GradientStop Color="#003f7e" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="SeriesHeader" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="Margin" Value="0,10,5,5"/>
        <Setter Property="FontSize" Value="18" />
    </Style>


    <Style x:Key="BossContainer" TargetType="Border">
        <!--<Setter Property="CornerRadius" Value="13"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#0049B5"></Setter>
        <Setter Property="Background" Value="#092c62"></Setter>-->
    </Style>


    <Style x:Key="NotifyContainer" TargetType="Border">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#0049B5"></Setter>
        <Setter Property="Background" Value="#092c62"></Setter>
    </Style>

    <Style x:Key="NotifyContainerText" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="#5AA0EF" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />
    </Style>


    <Style x:Key="NotifyContainerAlert" TargetType="Border">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#bf7a07"></Setter>
        <Setter Property="Background" Value="#e69a2a"></Setter>
    </Style>

    <Style x:Key="NotifyContainerAlertText" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="#ffff99" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />
    </Style>

    <Style TargetType="Border" x:Key="BigPopupSection">
        <Setter Property="CornerRadius" Value="13"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#0049B5"></Setter>
        <Setter Property="Background" Value="#092c62"></Setter>
        <Setter Property="Margin" Value="5,5,5,5"></Setter>
        <Setter Property="Padding" Value="10,10,10,10"></Setter>
    </Style>

    <Style TargetType="Border" x:Key="BigPopupWithoutBorderSection">
        <Setter Property="CornerRadius" Value="13"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="#0049B5"></Setter>
        <Setter Property="Background" Value="#092c62"></Setter>
        <Setter Property="Margin" Value="5,5,5,5"></Setter>
        <Setter Property="Padding" Value="10,10,10,10"></Setter>
    </Style>

    <Style x:Key="BaseTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#5AA0EF" />

        <Setter Property="FontFamily" Value="Microsoft YaHei" />
    </Style>
    <Style x:Key="BaseContentTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style x:Key="BaseContentWhiteStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />

    </Style>
    <Style x:Key="BaseContentSmallWhiteStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="BaseContentSmallTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="BaseContentVerySmallTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="9" />
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>



    <Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}"  BorderThickness="2" CornerRadius="15" Name="PART_Background">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#0049B5"></Setter>
        <Setter Property="Background" Value="#092c62"></Setter>
        <Setter Property="Margin" Value="5,0,5,0"></Setter>
        <Setter Property="Width" Value="70"></Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="#5AA0EF" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.Setters>
                    <Setter Property="BorderBrush" Value="#3284d5" />
                    <Setter Property="Background" Value="#3284d5"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                </Trigger.Setters>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="SmallButtonStyle">
        <Setter Property="BorderBrush" Value="#0049B5"></Setter>
        <Setter Property="Background" Value="#092c62"></Setter>
        <Setter Property="Foreground" Value="#5AA0EF" />
    </Style>

    <Style TargetType="Button" x:Key="SmallButtonSelectedStyle">
        <Setter Property="BorderBrush" Value="#3284d5" />
        <Setter Property="Background" Value="#3284d5"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>



    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <StreamGeometry x:Key="TreeArrow" >M0.5,0L0.5,7 4.5,3.5z</StreamGeometry>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898" Margin="0,2,5,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="45" CenterX="0" CenterY="2.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="{x:Type TreeViewItem}" x:Key="AeroTreeStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" CornerRadius="2">
                            <Border x:Name="InnerBd" BorderThickness="1" CornerRadius="1">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Border>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
    <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <SolidColorBrush x:Key="StandardBorderBrush" Color="#031F3C" />
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#031F3C" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBrush" Color="#3582D6" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#3582D6" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#3582D6" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#3582D6" />
    <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
            StartPoint="0,0" EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White" Offset="0.0" />
                <GradientStop Color="White" Offset="0.6" />
                <GradientStop Color="#DDDDDD" Offset="1.2"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush"
            StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <!--<LinearGradientBrush x:Key="PressedBrush"
            StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#3582D6" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>-->
    <SolidColorBrush x:Key="PressedBrush" Color="#3582D6" />


    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
          Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                        <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
          CornerRadius="2"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="#03112A" Opacity="0.5"/>
            <RepeatButton
      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="#03112A" Opacity="0.5" />
            <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="0"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="DatePicker" x:Key="DatePickerStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#101a2b" Offset="0.0"/>
                    <GradientStop Color="#1a2746" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#5aa0ef"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
        <Setter Property="Width" Value="180"></Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#0049B5"/>
        <Style.Resources>
            <Style TargetType="{x:Type DatePickerTextBox}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="#101a2b" Offset="0.0"/>
                            <GradientStop Color="#1a2746" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Name="dptext" TargetType="DatePickerTextBox">
                            <Border >
                                <Grid>
                                    <Grid x:Name="WatermarkContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Border" x:Key="TrafficSection">
        <Setter Property="Background" Value="#FF0065CB">
        </Setter>
    </Style>
    <Style x:Key="TrafficListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>


    <Style x:Key="TrainBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0,0,10,10">
                        <Grid   >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="13"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="13"></RowDefinition>
                                <RowDefinition Height="13"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="{Binding Status, Converter={StaticResource StatusToBrushConverter}}" ></Border>
                            <TextBlock Grid.Row="1"  Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <TextBlock Grid.Row="2"  HorizontalAlignment="Center" VerticalAlignment="Center"><Run >3</Run>分钟</TextBlock>
                            <TextBlock  Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center">到站</TextBlock>
                        </Grid>
                    </Border>
            
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TrainCheckBoxStyle" TargetType="{x:Type CheckBox}">
        
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#FF0099FF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">

                            <Viewbox Stretch="Fill">
                                <Grid Height="26.757" Width="108" Background="#00092B61">
                                    <Path x:Name="矩形_4" Data="F1M5,5C5,5 5,19 5,19 5,19 19,19 19,19 19,19 19,5 19,5 19,5 5,5 5,5z M2,2C2,2 22,2 22,2 22,2 22,22 22,22 22,22 2,22 2,22 2,22 2,2 2,2z" Fill="#FF0353CB" Width="23" HorizontalAlignment="Left" Margin="3,0,0,3.757"/>
                                    <Path x:Name="CheckedShape" Data="F1M2,13C2,13 10,21 10,21 10,21 13,21 13,21 13,21 29,5 29,5 29,5 26,2 26,2 26,2 12,16 12,16 12,16 11,16 11,16 11,16 5,10 5,10 5,10 2,13 2,13z" Fill="#FFF39700" Width="30" HorizontalAlignment="Left" Margin="0,1,0,3.757"/>
                                    <ContentPresenter  Margin="36,3,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Viewbox>


                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox Stretch="Fill" >
                                <Grid Height="26.757" Width="108" Background="#00092B61">
                                    <Path x:Name="矩形_4" Data="F1M5,5C5,5 5,19 5,19 5,19 19,19 19,19 19,19 19,5 19,5 19,5 5,5 5,5z M2,2C2,2 22,2 22,2 22,2 22,22 22,22 22,22 2,22 2,22 2,22 2,2 2,2z" Fill="#FF0353CB" Width="23" HorizontalAlignment="Left" Margin="3,0,0,3.757"/>
                                    <Path x:Name="CheckedShape" Visibility="Hidden"  Data="F1M2,13C2,13 10,21 10,21 10,21 13,21 13,21 13,21 29,5 29,5 29,5 26,2 26,2 26,2 12,16 12,16 12,16 11,16 11,16 11,16 5,10 5,10 5,10 2,13 2,13z" Fill="#FFF39700" Width="30" HorizontalAlignment="Left" Margin="0,1,0,3.757"/>
                                    <ContentPresenter  Margin="36,3,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Viewbox>

                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="SubWayCheckStyle" TargetType="{x:Type CheckBox}">

        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#FF0099FF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid Background="#00092B61">
                                <Viewbox Stretch="Fill">
                                    <Grid Height="23.7566666666667" Width="193">
                                        <Path x:Name="形状_2" Data="F1M14,2C14,2 14,16 14,16 14,16 1,9 1,9 1,9 14,2 14,2z" Fill="#FFF39700" Width="15" HorizontalAlignment="Left" Margin="0,1,0,5.757"/>
                                        <Path x:Name="形状_2_副本" Data="F1M2,16C2,16 2,2 2,2 2,2 15,9 15,9 15,9 2,16 2,16z" Fill="#FFF39700" Width="16" HorizontalAlignment="Right" Margin="0,1,0,5.757"/>
                                    </Grid>
                                </Viewbox>
                                <ContentPresenter Margin="72,0,74.443,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="1号线"/>
                            </Grid>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}" >
                            <Grid Background="#00092B61">
                                <Viewbox Stretch="Fill">
                                    <Grid Height="23.7566666666667" Width="193">
                                        <Path x:Name="形状_2" Data="F1M14,2C14,2 14,16 14,16 14,16 1,9 1,9 1,9 14,2 14,2z" Fill="#FFF39700" Width="15" HorizontalAlignment="Left" Margin="0,1,0,5.757"/>
                                        <Path x:Name="形状_2_副本" Data="F1M2,16C2,16 2,2 2,2 2,2 15,9 15,9 15,9 2,16 2,16z" Fill="#FFF39700" Width="16" HorizontalAlignment="Right" Margin="0,1,0,5.757"/>
                                    </Grid>
                                </Viewbox>
                                <ContentPresenter Margin="72,0,74.443,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  Content="2号线"/>
                            </Grid>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="GridTemplate" TargetType="{x:Type dxg:GridControl}">
        <ContentControl x:Name="PART_ThemesLoader" Background="Transparent">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding View}" />
            </Border>
        </ContentControl>
    </ControlTemplate>
</ResourceDictionary>